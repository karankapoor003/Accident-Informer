{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home-page/home-page.component.ts","webpack:///src/app/home-page/home-page.component.html","webpack:///src/app/report-accident/report-accident.component.ts","webpack:///src/app/report-accident/report-accident.component.html","webpack:///src/app/requests.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HomePageComponent","requestsService","modalService","infoWindow","google","maps","InfoWindow","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","accidents","getAccidents","subscribe","accident","console","log","acc","addMarker","map","latlng","mapProperties","center","LatLng","zoom","mapTypeId","MapTypeId","ROADMAP","Map","mapElement","nativeElement","setMap","getRoutes","request","origin","from","destination","to","travelMode","provideRouteAlternatives","route","result","status","colors","i","Polyline","strokeColor","path","overview_path","setDirections","open","Marker","position","getDirections","reportAccident","ReportAccidentComponent","requestService","renderer","geocoder","Geocoder","videoHeight","videoWidth","location","constraints","audio","video","width","ideal","height","facingMode","captures","startCamera","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","geocodeLatLng","mediaDevices","getUserMedia","attachVideo","bind","handleError","alert","error","stream","setProperty","videoElement","listen","event","canvas","getContext","drawImage","photo","fire","postAccidents","data","showDenyButton","showCancelButton","confirmButtonText","isConfirmed","window","reload","isDenied","modal","document","getElementById","style","display","lat","long","lng","geocode","results","formatted_address","closemodal","capture","report","RequestsService","http","backendURL","directionsURL","api_key","geocoding","get","post","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n}\r\n","\r\n\r\n<app-home-page></app-home-page>\r\n\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule,ViewChild } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { RequestsService } from './requests.service';\r\nimport { ReportAccidentComponent } from './report-accident/report-accident.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomePageComponent,\r\n    ReportAccidentComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgbModule\r\n  ],\r\n  providers: [RequestsService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormsModule , NgModel } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { } from 'googlemaps';\r\nimport { RequestsService } from '../requests.service';\r\nimport { ReportAccidentComponent } from '../report-accident/report-accident.component';\r\n\r\n// import { ViewChild } from '@angular/core';\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n\r\n  @ViewChild('map', { static: true }) mapElement: any;\r\n  @ViewChild('canva', { static: true }) canvaElement: any;\r\n\r\n  public infoWindow = new google.maps.InfoWindow();\r\n\r\n  \r\n  public map: google.maps.Map;\r\n  public directionsService = new google.maps.DirectionsService();\r\n  public directionsRenderer = new google.maps.DirectionsRenderer();\r\n  public to;\r\n  public from;\r\n  public request;\r\n  public accidents;\r\n  public line;\r\n  constructor(private requestsService:RequestsService, private modalService: NgbModal) { \r\n    this.accidents=[];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.requestsService.getAccidents().subscribe((accident)=>{\r\n      this.accidents=accident;\r\n      console.log(this.accidents);\r\n      for(let acc of this.accidents){\r\n        this.addMarker(this.map,acc.latlng);\r\n      }\r\n    })\r\n\r\n    const mapProperties = {\r\n      center: new google.maps.LatLng(20.0123533,64.4487244),\r\n      zoom: 4,\r\n      mapTypeId: google.maps.MapTypeId.ROADMAP\r\n    };\r\n    // const myLatLng = { lat: 20.0123533, lng: 64.4487244 };\r\n\r\n    this.map = new google.maps.Map(this.mapElement.nativeElement, mapProperties);\r\n    this.directionsRenderer.setMap(this.map);\r\n\r\n\r\n  }\r\n\r\n  getDirections(){\r\n    this.getRoutes(this.directionsService,this.directionsRenderer,this.map);\r\n  }\r\n\r\n\r\n  getRoutes(\r\n    directionsService: google.maps.DirectionsService,\r\n    directionsRenderer: google.maps.DirectionsRenderer,\r\n    map:google.maps.Map\r\n    ){\r\n      this.request = {\r\n        origin: this.from,\r\n        destination: this.to,\r\n        travelMode: 'DRIVING',\r\n        provideRouteAlternatives:true\r\n\r\n      };\r\n      directionsService.route(this.request, function(result, status) {\r\n        if (status == 'OK') {\r\n          console.log(result);\r\n          var colors=[\"#7B1FA2\",\"#E2C044\",\"#F5853F\",\"#FFCDBC\"];\r\n          for(var i in result.routes){\r\n    \r\n            new google.maps.Polyline({\r\n              map: map,\r\n              strokeColor:colors[i],\r\n              path:result.routes[i].overview_path\r\n            })\r\n              \r\n          }\r\n          directionsRenderer.setDirections(result);\r\n        } else {\r\n          console.log('Directions request failed due to ' + status)\r\n        }\r\n      });\r\n    }\r\n\r\n   reportAccident(){\r\n    this.modalService.open(ReportAccidentComponent);\r\n   } \r\n\r\n   addMarker(map:google.maps.Map,latlng:google.maps.LatLngLiteral){\r\n    new google.maps.Marker({\r\n      position: latlng,\r\n      map:map,\r\n      title: \"Hello World!\",\r\n    }); \r\n   }\r\n\r\n}","<nav class=\"navbar  navbar-expand-md\" style=\"background-color: #bfbac7;\">\r\n  <h3 class=\"navbar-nav\" style=\"font-family: Georgia, 'Times New Roman', Times, serif;justify-content: left,\">Accident\r\n    Informer</h3>\r\n  <div id=\"navbar\" class=\"navbar-collapse collapse\">\r\n    <div class=\"social-menu\">\r\n      <ul class=\"nav navbar-nav ml-auto\">\r\n        <li><a href=\"https://www.facebook.com/\"><i class=\"fa fa-facebook\"></i></a></li>\r\n        <li><a href=\"https://twitter.com/explore\"><i class=\"fa fa-twitter\"></i></a></li>\r\n        <li><a href=\"https://www.instagram.com/?hl=en\"><i class=\"fa fa-instagram\"></i></a></li>\r\n        <li><a href=\"https://www.pinterest.com/\"><i class=\"fa fa-pinterest\"></i></a></li>\r\n        <li><a href=\"https://in.linkedin.com/\"><i class=\"fa fa-linkedin\"></i></a></li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n<div class=\"header\">\r\n  <section class=\"set\">\r\n    <div class=\"row text center\">\r\n      <div class=\"col-lg-12\">\r\n        <div class=\"p-5\">\r\n          <h2 style=\"font-family: Georgia, 'Times New Roman', Times, serif;color:black\">Find Routes for a Smooth\r\n            Ride......</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <section class=\"set hiding\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-3 offset-md-1\">\r\n        <img src=\"../../assets/directions.jpeg\" class=\"img-responsive\" alt=\"\">\r\n      </div>\r\n      <div class=\"col-md-5 offset-md-1 p-4 text-center\">\r\n        <br><br><br><br>\r\n        <h3>Finds low traffic paths so you reach your destination before time. This is especially a life saving concept\r\n          for accident victims.</h3>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <section class=\"sect\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-3 col-md-6\">\r\n          <h2 style=\"font-family: Georgia, 'Times New Roman', Times, serif;justify-content: left,\">Get Directions</h2>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <br>\r\n    <div class=\"d-flex justify-content-center form-div\">\r\n      <div class=\"row \">\r\n        <form action=\"\" method=\"POST\">\r\n          <!-- <form class=\"form-inline\">\r\n            <div class=\"row\">\r\n              <div class=\"form-group mx-sm-3 mb-2\">\r\n                <label for=\"colFormLabelLg\" class=\"col-sm-2 col-form-label col-form-label-lg\"\r\n                  style=\"font-family: Georgia, 'Times New Roman', Times, serif \">From</label>\r\n\r\n                <input type=\"text\" class=\"form-control\" id=\"inputPassword2\" placeholder=\"From\" name=\"from\"\r\n                  [(ngModel)]=\"from\">\r\n              </div>\r\n              <div class=\"form-group mx-sm-3 mb-2\">\r\n                <label for=\"colFormLabelLg\" class=\"col-sm-2 col-form-label col-form-label-lg\"\r\n                  style=\"font-family: Georgia, 'Times New Roman', Times, serif \">To</label>\r\n\r\n                <input type=\"text\" class=\"form-control\" id=\"inputPassword2\" placeholder=\"To\" name=\"to\" [(ngModel)]=\"to\">\r\n              </div>\r\n              <div class=\"form-group mx-sm-3 mb-2\">\r\n                <button type=\"submit\" class=\"btn btn-success\" (click)=\"getDirections()\">Submit</button>\r\n              </div>\r\n            </div>\r\n          </form> -->\r\n          <form class=\"form-inline\">\r\n            <div class=\"form-group\">\r\n              <label for=\"colFormLabelLg\" style=\"font-family: Georgia, 'Times New Roman', Times, serif \">From :</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"inputPassword2\" placeholder=\"From\" name=\"from\"\r\n                [(ngModel)]=\"from\">\r\n\r\n              <label for=\"colFormLabelLg\" style=\"font-family: Georgia, 'Times New Roman', Times, serif \">To :</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"inputPassword2\" placeholder=\"To\" name=\"to\" [(ngModel)]=\"to\">\r\n\r\n              <br>\r\n              <button type=\"submit\" class=\"btn btn-success\" (click)=\"getDirections()\">Submit</button>\r\n            </div>\r\n          </form>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <div class=\"row p-4\">\r\n      <div class=\"col-md-10 offset-md-1\">\r\n        <div class=\"Maps\">\r\n          <div #map class=\"mapping\" style=\"width:100%;height:60vh\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n  <section class=\"set accident-mob\">\r\n\r\n    <div class=\"container-fluid\">\r\n\r\n      <div class=\"text-center m-5\">\r\n        <br><br><br>\r\n        <h2 style=\"font-family: Georgia, 'Times New Roman', Times, serif;text-align: center;\"> Accidents</h2>\r\n      </div>\r\n      <div class=\"col-lg-12 text-center\">\r\n        <button style=\"width: 250px;color: white;\" class=\"btn btn-success\" (click)=\"reportAccident()\">Report</button>\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <div class=\"col-md-10 offset-md-1 \">\r\n      <table class=\"table table-borderless\">\r\n\r\n\r\n        <tr *ngFor=\"let accident of accidents;let i=index\">\r\n\r\n          <th class=\"dot\"></th>\r\n\r\n          <th scope=\"row\">{{ accident.location }}</th>\r\n\r\n          <td></td>\r\n\r\n        </tr>\r\n\r\n      </table>\r\n    </div>\r\n\r\n  </section>","import { Component, ElementRef, OnInit, ViewChild, Renderer2 } from '@angular/core';\r\nimport { Subscriber } from 'rxjs';\r\nimport { RequestsService } from '../requests.service';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\n\r\n@Component({\r\n  selector: 'app-report-accident',\r\n  templateUrl: './report-accident.component.html',\r\n  styleUrls: ['./report-accident.component.css']\r\n})\r\nexport class ReportAccidentComponent implements OnInit {\r\n  @ViewChild('video', { static: true }) videoElement: ElementRef;\r\n  @ViewChild('canvas', { static: true }) canvas: ElementRef;\r\n  @ViewChild('closebutton') closebutton;\r\n  \r\n  public geocoder = new google.maps.Geocoder();\r\n  videoHeight = 0;\r\n  videoWidth = 0;\r\n  captures: Array<any>;\r\n  public location = \"undefined\";\r\n  public photo;\r\n  public latlng;\r\n  constraints = {\r\n    audio: false,\r\n    video: {\r\n        width: { ideal: 640 },\r\n        height: { ideal: 360 },\r\n        facingMode: \"environment\"\r\n    }\r\n};\r\n \r\n\r\n  \r\n  constructor(private requestService: RequestsService, private renderer: Renderer2) {\r\n    this.captures = [];\r\n  }\r\n    \r\n\r\n  ngOnInit(): void {\r\n    this.startCamera();\r\n    navigator.geolocation.getCurrentPosition((position)=>{\r\n      console.log(position);\r\n      this.latlng={\r\n        \"lat\":position.coords.latitude,\r\n        \"lng\":position.coords.longitude\r\n      }\r\n      this.geocodeLatLng(this.geocoder,position.coords.latitude,position.coords.longitude);\r\n    });\r\n  }\r\n\r\n\r\n  startCamera() {\r\n    if (!!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia)) {\r\n      navigator.mediaDevices.getUserMedia(this.constraints).then(this.attachVideo.bind(this)).catch(this.handleError);\r\n    } else {\r\n      alert('Sorry, camera not available');\r\n    }\r\n  }\r\n\r\n  handleError(error) {\r\n    console.log('Error: ', error);\r\n  }\r\n \r\n  attachVideo(stream) {\r\n    this.renderer.setProperty(this.videoElement.nativeElement, 'srcObject', stream);\r\n    this.renderer.listen(this.videoElement.nativeElement, 'play', (event) => {\r\n      this.videoHeight = this.videoElement.nativeElement.videoHeight;\r\n      this.videoWidth = this.videoElement.nativeElement.videoWidth;\r\n    });\r\n  }\r\n\r\n  capture() {\r\n    this.renderer.setProperty(this.canvas.nativeElement, 'width', this.videoWidth);\r\n    this.renderer.setProperty(this.canvas.nativeElement, 'height', this.videoHeight);\r\n    this.canvas.nativeElement.getContext('2d').drawImage(this.videoElement.nativeElement, 0, 0);\r\n    this.photo = this.videoElement.nativeElement;\r\n  }\r\n  alertWithSuccess(){\r\n    Swal.fire('Thank you...', 'You submitted succesfully!', 'success')\r\n  }\r\n\r\n  report() {\r\n    this.requestService.postAccidents(this.photo,this.location,this.latlng).subscribe((data)=>{\r\n      console.log(data);\r\n      // this.alertWithSuccess\r\n      Swal.fire({\r\n        title: 'Accident Reported!!',\r\n        showDenyButton: false,\r\n        showCancelButton: false,\r\n        confirmButtonText: \"OK\",\r\n        \r\n      }).then((result) => {\r\n        /* Read more about isConfirmed, isDenied below */\r\n        if (result.isConfirmed) {\r\n          window.location.reload();\r\n        } else if (result.isDenied) {\r\n          Swal.fire('Changes are not saved', '', 'info')\r\n        }\r\n      })\r\n      // alert('Accident Reported!!')\r\n      // window.location.reload();\r\n\r\n    })\r\n  }\r\n  closemodal()\r\n  {\r\n    var modal=document.getElementById(\"modal\");\r\n    modal.style.display=\"none\";\r\n  }\r\n\r\n  geocodeLatLng(\r\n    geocoder: google.maps.Geocoder,\r\n    lat: number, long: number\r\n  ) {\r\n    const latlng = {\r\n      lat: lat,\r\n      lng: long,\r\n    };\r\n    geocoder.geocode(\r\n      { location: latlng },\r\n      (\r\n        results: google.maps.GeocoderResult[],\r\n        status: google.maps.GeocoderStatus\r\n      ) => {\r\n        if (status === \"OK\") {\r\n          if (results[0]) {\r\n            this.location = results[0].formatted_address;\r\n          } else {\r\n            this.location = \"No results found\";\r\n          }\r\n        } else {\r\n          this.location = \"Geocoder failed due to: \" + status;\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n","\r\n<div class=\"container-fluid vh-10 \" id=\"modal\" style=\"background-color:black;box-shadow: 0px 7px 5px rgba(0, 0, 0, 0.5);\">\r\n      \r\n      <button style =\"color: rgb(14, 13, 13);\"type=\"button\" #closebutton class=\"close\" data-dismiss=\"modal\" (click)=\"closemodal()\">&times;</button>\r\n   \r\n    \r\n    <div style =\"background-color: rgba(57, 58, 58, 0.8);padding: 4%;border-radius: 150%;\"class=\"d-flex flex-column align-items-center\">\r\n       <div class=\"p-1\">\r\n          <video #video class=\"vid\" autoplay  style =\"border-radius: 10%; border:1px solid #000;box-shadow: 0px 7px 5px rgba(0, 0, 0, 0.5);\"></video>\r\n       </div>\r\n       <br>\r\n       <div class=\"pb-2\">\r\n          <button   style=\"width: 250px;color: white;\" type =\"submit\"class=\"btn btn-warning\"(click)=\"capture()\">Capture & Upload Image </button>\r\n       </div>\r\n       <div class=\"p-1\">\r\n          <canvas #canvas class=\"vid\" style =\"border-radius: 10%; border:1px solid #000;box-shadow: 0px 7px 5px rgba(0, 0, 0, 0.5);\"></canvas>\r\n       </div>\r\n       <br>\r\n       <div class=\"pb-2\">\r\n           <button   style=\"width: 250px;\" type =\"submit\"class=\"btn btn-danger\" (click)=\"report()\">Report Accident</button>\r\n       </div>\r\n    </div>\r\n </div>"," import { Injectable } from '@angular/core';\r\nimport { HttpClient , HttpHeaders, HttpParams } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RequestsService {\r\n\r\n  public backendURL = \"\";\r\n  public directionsURL = \"https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/directions/json?\";\r\n  public api_key = \"AIzaSyD6_3OqaGltffOaYOfROZSVEJTFznfRdFU\";\r\n  public geocoding=\"https://maps.googleapis.com/maps/api/geocode/json?\";\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getDirections(to,from){\r\n    return  this.http.get(this.directionsURL+'origin='+from+'&'+'destination='+to+'&'+'key='+this.api_key)\r\n  }\r\n\r\n  postAccidents(photo,location,latlng){\r\n    return this.http.post(this.backendURL+'report-accident',{photo,location,latlng});\r\n  }\r\n\r\n  getAccidents(){\r\n    return this.http.get(this.backendURL+'getAccidents');\r\n  }\r\n   \r\n  getaddress(){\r\n      return this.http.get(this.geocoding+'lat =')\r\n  }\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}